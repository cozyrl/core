
/* 
  The configuration from the base file are loaded first, 
  then overridden by those in the inheriting config file.
  Visit https://aka.ms/tsconfig to read more about this file.
*/

{
  "compilerOptions": {

    /* Language and Environment */
    "experimentalDecorators": true,                           /* Enable experimental support for legacy experimental decorators. */
    "emitDecoratorMetadata": true,                            /* Emit design-type metadata for decorated declarations in source files. */

    /* Modules */
    "resolveJsonModule": true,                                /* Enable importing .json files. */  

    /* JavaScript Support */
    "allowJs": false,                                         /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */

    /* Emit */
    "removeComments": true,                                   /* Disable emitting comments. */
    "importHelpers": true,                                    /* Allow importing helper functions from tslib once per project, instead of including them per-file. */

    /* Interop Constraints */
    "isolatedModules": true,                                  /* Ensure that each file can be safely transpiled without relying on other imports. */
    "esModuleInterop": true,                                  /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,                 /* Ensure that casing is correct in imports. */

    /* Type Checking */
    "strict": true,                                           /* Enable all strict type-checking options. */
    "noImplicitAny": true,                                    /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "noImplicitThis": true,                                   /* Enable error reporting when 'this' is given the type 'any'. */
    "noUnusedLocals": true,                                   /* Enable error reporting when local variables aren't read. */
    "noUnusedParameters": true,                               /* Raise an error when a function parameter isn't read. */
    "exactOptionalPropertyTypes": true,                       /* Interpret optional property types as written, rather than adding 'undefined'. */
    "noImplicitReturns": true,                                /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noFallthroughCasesInSwitch": true,                       /* Enable error reporting for fallthrough cases in switch statements. */
    "noUncheckedIndexedAccess": true,                         /* Add 'undefined' to a type when accessed using an index. */
    "noImplicitOverride": true,                               /* Ensure overriding members in derived classes are marked with an override modifier. */
    "noPropertyAccessFromIndexSignature": true,               /* Enforces using indexed accessors for keys declared using an indexed type. */
    "allowUnusedLabels": false,                               /* Disable error reporting for unused labels. */
    "allowUnreachableCode": false                             /* Disable error reporting for unreachable code. */
  }
  
}
